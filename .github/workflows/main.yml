name: UC-05 Deployment Workflow

on:
  workflow_dispatch:
    inputs:
      action:
        description: Terraform Action
        required: true
        type: choice
        default: apply
        options: [apply, destroy]

permissions:
  id-token: write        # for OIDC
  contents: read

env:
  TF_VERSION: "1.6.6"
  AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}

jobs:
  # ────────────────────────────────────────────────────────────────
  lint-and-security:
    name: Lint & Security Checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.50.2

      - name: Run TFLint
        run: |
          tflint --init
          tflint -f compact

      - name: Setup Checkov
        uses: bridgecrewio/checkov-action@v12

      - name: Run Checkov (soft‑fail)
        continue-on-error: true
        run: checkov -d .

  # ────────────────────────────────────────────────────────────────
  terraform:
    name: Terraform ${{ github.event.inputs.action }}
    runs-on: ubuntu-latest
    needs: lint-and-security
    defaults:
      run:
        shell: bash
        working-directory: ./

    steps:
      - uses: actions/checkout@v4

      # 1️⃣  Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # 2️⃣  Configure AWS creds via OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::767397779454:role/oidc-assume-role
          aws-region: ${{ env.AWS_REGION }}

      # 3️⃣  (Optional) Policy simulator to confirm rights
      - name: Simulate IAM permissions
        run: |
          aws iam simulate-principal-policy \
            --policy-source-arn arn:aws:iam::767397779454:role/oidc-assume-role \
            --action-names s3:CreateBucket sns:CreateTopic iam:CreateRole lambda:CreateFunction

      # 4️⃣  Terraform workflow
      - name: Terraform FMT
        run: terraform fmt -recursive -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        if: github.event.inputs.action == 'apply'
        run: |
          terraform plan \
            -var-file="terraform.tfvars" \
            -lock-timeout=30s \
            -input=false \
            -out=tfplan.binary

      - name: Show Plan Summary
        if: github.event.inputs.action == 'apply'
        run: terraform show -no-color tfplan.binary

      - name: Terraform Apply
        if: github.event.inputs.action == 'apply'
        run: terraform apply -auto-approve tfplan.binary

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve
